Simulator report for WIMPAVR_DEMO
Fri Mar 04 15:50:36 2022
Quartus II Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 1.0 us       ;
; Simulation Netlist Size     ; 261 nodes    ;
; Simulation Coverage         ;      36.05 % ;
; Total Number of Transitions ; 5593         ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Cyclone II   ;
+-----------------------------+--------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                            ;
+--------------------------------------------------------------------------------------------+------------------+---------------+
; Option                                                                                     ; Setting          ; Default Value ;
+--------------------------------------------------------------------------------------------+------------------+---------------+
; Simulation mode                                                                            ; Functional       ; Timing        ;
; Start time                                                                                 ; 0 ns             ; 0 ns          ;
; Simulation results format                                                                  ; CVWF             ;               ;
; Vector input source                                                                        ; ALU_TOP_TEST.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; On               ; On            ;
; Check outputs                                                                              ; Off              ; Off           ;
; Report simulation coverage                                                                 ; On               ; On            ;
; Display complete 1/0 value coverage report                                                 ; On               ; On            ;
; Display missing 1-value coverage report                                                    ; On               ; On            ;
; Display missing 0-value coverage report                                                    ; On               ; On            ;
; Detect setup and hold time violations                                                      ; Off              ; Off           ;
; Detect glitches                                                                            ; Off              ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off              ; Off           ;
; Generate Signal Activity File                                                              ; Off              ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off              ; Off           ;
; Group bus channels in simulation results                                                   ; Off              ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On               ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE       ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off              ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off              ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto             ; Auto          ;
+--------------------------------------------------------------------------------------------+------------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      36.05 % ;
; Total nodes checked                                 ; 261          ;
; Total output ports checked                          ; 258          ;
; Total output ports with complete 1/0-value coverage ; 93           ;
; Total output ports with no 1/0-value coverage       ; 165          ;
; Total output ports with no 1-value coverage         ; 165          ;
; Total output ports with no 0-value coverage         ; 165          ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                  ;
+-------------------------------------------------------------+-------------------------------------------------------------+------------------+
; Node Name                                                   ; Output Port Name                                            ; Output Port Type ;
+-------------------------------------------------------------+-------------------------------------------------------------+------------------+
; |ALU_TOP|D_REG0                                             ; |ALU_TOP|D_REG0                                             ; out              ;
; |ALU_TOP|CLOCK                                              ; |ALU_TOP|CLOCK                                              ; out              ;
; |ALU_TOP|D_REG1                                             ; |ALU_TOP|D_REG1                                             ; out              ;
; |ALU_TOP|D_REG2                                             ; |ALU_TOP|D_REG2                                             ; out              ;
; |ALU_TOP|D_REG3                                             ; |ALU_TOP|D_REG3                                             ; out              ;
; |ALU_TOP|D_REG4                                             ; |ALU_TOP|D_REG4                                             ; out              ;
; |ALU_TOP|D_REG5                                             ; |ALU_TOP|D_REG5                                             ; out              ;
; |ALU_TOP|D_REG6                                             ; |ALU_TOP|D_REG6                                             ; out              ;
; |ALU_TOP|D_REG7                                             ; |ALU_TOP|D_REG7                                             ; out              ;
; |ALU_TOP|D0                                                 ; |ALU_TOP|D0                                                 ; pin_out          ;
; |ALU_TOP|D1                                                 ; |ALU_TOP|D1                                                 ; pin_out          ;
; |ALU_TOP|D2                                                 ; |ALU_TOP|D2                                                 ; pin_out          ;
; |ALU_TOP|D3                                                 ; |ALU_TOP|D3                                                 ; pin_out          ;
; |ALU_TOP|D4                                                 ; |ALU_TOP|D4                                                 ; pin_out          ;
; |ALU_TOP|D5                                                 ; |ALU_TOP|D5                                                 ; pin_out          ;
; |ALU_TOP|D6                                                 ; |ALU_TOP|D6                                                 ; pin_out          ;
; |ALU_TOP|D7                                                 ; |ALU_TOP|D7                                                 ; pin_out          ;
; |ALU_TOP|logic_swap:inst8|inst1                             ; |ALU_TOP|logic_swap:inst8|inst1                             ; out0             ;
; |ALU_TOP|logic_swap:inst8|inst2                             ; |ALU_TOP|logic_swap:inst8|inst2                             ; out0             ;
; |ALU_TOP|logic_swap:inst7|inst1                             ; |ALU_TOP|logic_swap:inst7|inst1                             ; out0             ;
; |ALU_TOP|logic_swap:inst7|inst2                             ; |ALU_TOP|logic_swap:inst7|inst2                             ; out0             ;
; |ALU_TOP|logic_swap:inst6|inst1                             ; |ALU_TOP|logic_swap:inst6|inst1                             ; out0             ;
; |ALU_TOP|logic_swap:inst6|inst2                             ; |ALU_TOP|logic_swap:inst6|inst2                             ; out0             ;
; |ALU_TOP|logic_swap:inst5|inst1                             ; |ALU_TOP|logic_swap:inst5|inst1                             ; out0             ;
; |ALU_TOP|logic_swap:inst5|inst2                             ; |ALU_TOP|logic_swap:inst5|inst2                             ; out0             ;
; |ALU_TOP|logic_swap:inst4|inst1                             ; |ALU_TOP|logic_swap:inst4|inst1                             ; out0             ;
; |ALU_TOP|logic_swap:inst4|inst2                             ; |ALU_TOP|logic_swap:inst4|inst2                             ; out0             ;
; |ALU_TOP|logic_swap:inst3|inst1                             ; |ALU_TOP|logic_swap:inst3|inst1                             ; out0             ;
; |ALU_TOP|logic_swap:inst3|inst2                             ; |ALU_TOP|logic_swap:inst3|inst2                             ; out0             ;
; |ALU_TOP|logic_swap:inst2|inst1                             ; |ALU_TOP|logic_swap:inst2|inst1                             ; out0             ;
; |ALU_TOP|logic_swap:inst2|inst2                             ; |ALU_TOP|logic_swap:inst2|inst2                             ; out0             ;
; |ALU_TOP|logic_swap:inst1|inst1                             ; |ALU_TOP|logic_swap:inst1|inst1                             ; out0             ;
; |ALU_TOP|logic_swap:inst1|inst2                             ; |ALU_TOP|logic_swap:inst1|inst2                             ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst11|inst2              ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst11|inst2              ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst11|inst               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst11|inst               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst10|inst2              ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst10|inst2              ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst10|inst               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst10|inst               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst9|inst2               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst9|inst2               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst9|inst                ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst9|inst                ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst8|inst2               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst8|inst2               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst8|inst                ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst8|inst                ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst7|inst2               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst7|inst2               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst7|inst                ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst7|inst                ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst6|inst2               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst6|inst2               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst6|inst                ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst6|inst                ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst5|inst2               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst5|inst2               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst5|inst                ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst5|inst                ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst4|inst2               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst4|inst2               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst4|inst                ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst4|inst                ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|4_1_MUX:inst1|inst8             ; |ALU_TOP|CARRY_LOGIC:inst14|4_1_MUX:inst1|inst8             ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|4_1_MUX:inst1|inst4             ; |ALU_TOP|CARRY_LOGIC:inst14|4_1_MUX:inst1|inst4             ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|inst9                      ; |ALU_TOP|8_B_Ripple_Adder:inst10|inst9                      ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst6 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst6 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst  ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst  ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst5 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst5 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst3 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst3 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst4 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst4 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst6 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst6 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst  ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst  ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst5 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst5 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst3 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst3 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst4 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst4 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst6 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst6 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst  ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst  ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst5 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst5 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst3 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst3 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst4 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst4 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst6 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst6 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst  ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst  ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst5 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst5 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst3 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst3 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst4 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst4 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst6 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst6 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst  ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst  ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst5 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst5 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst3 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst3 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst4 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst4 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst6 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst6 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst  ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst  ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst5 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst5 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst3 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst3 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst4 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst4 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst6 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst6 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst  ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst  ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst5 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst5 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst4 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst4 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst6 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst6 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst  ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst  ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst3 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst3 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst4 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst4 ; out0             ;
; |ALU_TOP|Z_LOGIC:inst12|inst9                               ; |ALU_TOP|Z_LOGIC:inst12|inst9                               ; out0             ;
; |ALU_TOP|Z_LOGIC:inst12|inst5                               ; |ALU_TOP|Z_LOGIC:inst12|inst5                               ; out0             ;
; |ALU_TOP|Z_LOGIC:inst12|inst                                ; |ALU_TOP|Z_LOGIC:inst12|inst                                ; out0             ;
+-------------------------------------------------------------+-------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                     ;
+-------------------------------------------------------------+-------------------------------------------------------------+------------------+
; Node Name                                                   ; Output Port Name                                            ; Output Port Type ;
+-------------------------------------------------------------+-------------------------------------------------------------+------------------+
; |ALU_TOP|Z_FLAG                                             ; |ALU_TOP|Z_FLAG                                             ; pin_out          ;
; |ALU_TOP|IR0                                                ; |ALU_TOP|IR0                                                ; out              ;
; |ALU_TOP|IR1                                                ; |ALU_TOP|IR1                                                ; out              ;
; |ALU_TOP|IR2                                                ; |ALU_TOP|IR2                                                ; out              ;
; |ALU_TOP|IR3                                                ; |ALU_TOP|IR3                                                ; out              ;
; |ALU_TOP|IR7                                                ; |ALU_TOP|IR7                                                ; out              ;
; |ALU_TOP|IR8                                                ; |ALU_TOP|IR8                                                ; out              ;
; |ALU_TOP|IR9                                                ; |ALU_TOP|IR9                                                ; out              ;
; |ALU_TOP|IR10                                               ; |ALU_TOP|IR10                                               ; out              ;
; |ALU_TOP|IR11                                               ; |ALU_TOP|IR11                                               ; out              ;
; |ALU_TOP|IR12                                               ; |ALU_TOP|IR12                                               ; out              ;
; |ALU_TOP|IR13                                               ; |ALU_TOP|IR13                                               ; out              ;
; |ALU_TOP|IR14                                               ; |ALU_TOP|IR14                                               ; out              ;
; |ALU_TOP|IR15                                               ; |ALU_TOP|IR15                                               ; out              ;
; |ALU_TOP|R_REG0                                             ; |ALU_TOP|R_REG0                                             ; out              ;
; |ALU_TOP|inst27                                             ; |ALU_TOP|inst27                                             ; out0             ;
; |ALU_TOP|CLRN                                               ; |ALU_TOP|CLRN                                               ; out              ;
; |ALU_TOP|EXECUTE                                            ; |ALU_TOP|EXECUTE                                            ; out              ;
; |ALU_TOP|R_REG1                                             ; |ALU_TOP|R_REG1                                             ; out              ;
; |ALU_TOP|R_REG2                                             ; |ALU_TOP|R_REG2                                             ; out              ;
; |ALU_TOP|R_REG3                                             ; |ALU_TOP|R_REG3                                             ; out              ;
; |ALU_TOP|R_REG4                                             ; |ALU_TOP|R_REG4                                             ; out              ;
; |ALU_TOP|R_REG5                                             ; |ALU_TOP|R_REG5                                             ; out              ;
; |ALU_TOP|R_REG6                                             ; |ALU_TOP|R_REG6                                             ; out              ;
; |ALU_TOP|R_REG7                                             ; |ALU_TOP|R_REG7                                             ; out              ;
; |ALU_TOP|inst9                                              ; |ALU_TOP|inst9                                              ; out0             ;
; |ALU_TOP|CARRY_FLAG                                         ; |ALU_TOP|CARRY_FLAG                                         ; pin_out          ;
; |ALU_TOP|logic_swap:inst8|inst                              ; |ALU_TOP|logic_swap:inst8|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst8|inst8                             ; |ALU_TOP|logic_swap:inst8|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst8|inst9                             ; |ALU_TOP|logic_swap:inst8|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst7|inst                              ; |ALU_TOP|logic_swap:inst7|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst7|inst8                             ; |ALU_TOP|logic_swap:inst7|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst7|inst9                             ; |ALU_TOP|logic_swap:inst7|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst6|inst                              ; |ALU_TOP|logic_swap:inst6|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst6|inst8                             ; |ALU_TOP|logic_swap:inst6|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst6|inst9                             ; |ALU_TOP|logic_swap:inst6|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst5|inst                              ; |ALU_TOP|logic_swap:inst5|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst5|inst8                             ; |ALU_TOP|logic_swap:inst5|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst5|inst9                             ; |ALU_TOP|logic_swap:inst5|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst4|inst                              ; |ALU_TOP|logic_swap:inst4|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst4|inst8                             ; |ALU_TOP|logic_swap:inst4|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst4|inst9                             ; |ALU_TOP|logic_swap:inst4|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst3|inst                              ; |ALU_TOP|logic_swap:inst3|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst3|inst8                             ; |ALU_TOP|logic_swap:inst3|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst3|inst9                             ; |ALU_TOP|logic_swap:inst3|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst2|inst                              ; |ALU_TOP|logic_swap:inst2|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst2|inst8                             ; |ALU_TOP|logic_swap:inst2|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst2|inst9                             ; |ALU_TOP|logic_swap:inst2|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst1|inst                              ; |ALU_TOP|logic_swap:inst1|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst1|inst8                             ; |ALU_TOP|logic_swap:inst1|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst1|inst9                             ; |ALU_TOP|logic_swap:inst1|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst11|inst9              ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst11|inst9              ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst10|inst9              ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst10|inst9              ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst9|inst9               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst9|inst9               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst8|inst9               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst8|inst9               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst7|inst9               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst7|inst9               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst6|inst9               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst6|inst9               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst5|inst9               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst5|inst9               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst4|inst9               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst4|inst9               ; out0             ;
; |ALU_TOP|4_1_MUX:MUX7|inst8                                 ; |ALU_TOP|4_1_MUX:MUX7|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX7|inst6                                 ; |ALU_TOP|4_1_MUX:MUX7|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX7|inst4                                 ; |ALU_TOP|4_1_MUX:MUX7|inst4                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX6|inst8                                 ; |ALU_TOP|4_1_MUX:MUX6|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX6|inst6                                 ; |ALU_TOP|4_1_MUX:MUX6|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX6|inst4                                 ; |ALU_TOP|4_1_MUX:MUX6|inst4                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX5|inst8                                 ; |ALU_TOP|4_1_MUX:MUX5|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX5|inst6                                 ; |ALU_TOP|4_1_MUX:MUX5|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX5|inst4                                 ; |ALU_TOP|4_1_MUX:MUX5|inst4                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX4|inst8                                 ; |ALU_TOP|4_1_MUX:MUX4|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX4|inst6                                 ; |ALU_TOP|4_1_MUX:MUX4|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX4|inst4                                 ; |ALU_TOP|4_1_MUX:MUX4|inst4                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX3|inst8                                 ; |ALU_TOP|4_1_MUX:MUX3|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX3|inst6                                 ; |ALU_TOP|4_1_MUX:MUX3|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX3|inst4                                 ; |ALU_TOP|4_1_MUX:MUX3|inst4                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX2|inst8                                 ; |ALU_TOP|4_1_MUX:MUX2|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX2|inst6                                 ; |ALU_TOP|4_1_MUX:MUX2|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX2|inst4                                 ; |ALU_TOP|4_1_MUX:MUX2|inst4                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX1|inst8                                 ; |ALU_TOP|4_1_MUX:MUX1|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX1|inst6                                 ; |ALU_TOP|4_1_MUX:MUX1|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX1|inst4                                 ; |ALU_TOP|4_1_MUX:MUX1|inst4                                 ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|inst5                           ; |ALU_TOP|CARRY_LOGIC:inst14|inst5                           ; regout           ;
; |ALU_TOP|CARRY_LOGIC:inst14|inst4                           ; |ALU_TOP|CARRY_LOGIC:inst14|inst4                           ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|inst9                           ; |ALU_TOP|CARRY_LOGIC:inst14|inst9                           ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|inst7                           ; |ALU_TOP|CARRY_LOGIC:inst14|inst7                           ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|ext_c:inst3|inst5               ; |ALU_TOP|CARRY_LOGIC:inst14|ext_c:inst3|inst5               ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|4_1_MUX:inst1|inst6             ; |ALU_TOP|CARRY_LOGIC:inst14|4_1_MUX:inst1|inst6             ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|4_1_MUX:inst1|inst5             ; |ALU_TOP|CARRY_LOGIC:inst14|4_1_MUX:inst1|inst5             ; out0             ;
; |ALU_TOP|4_1_MUX:MUX0|inst8                                 ; |ALU_TOP|4_1_MUX:MUX0|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX0|inst6                                 ; |ALU_TOP|4_1_MUX:MUX0|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX0|inst5                                 ; |ALU_TOP|4_1_MUX:MUX0|inst5                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX0|inst7                                 ; |ALU_TOP|4_1_MUX:MUX0|inst7                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX0|inst4                                 ; |ALU_TOP|4_1_MUX:MUX0|inst4                                 ; out0             ;
; |ALU_TOP|alu_control:inst|inst14                            ; |ALU_TOP|alu_control:inst|inst14                            ; out0             ;
; |ALU_TOP|alu_control:inst|inst16                            ; |ALU_TOP|alu_control:inst|inst16                            ; out0             ;
; |ALU_TOP|alu_control:inst|inst17                            ; |ALU_TOP|alu_control:inst|inst17                            ; out0             ;
; |ALU_TOP|alu_control:inst|inst13                            ; |ALU_TOP|alu_control:inst|inst13                            ; out0             ;
; |ALU_TOP|alu_control:inst|inst6                             ; |ALU_TOP|alu_control:inst|inst6                             ; out0             ;
; |ALU_TOP|alu_control:inst|inst11                            ; |ALU_TOP|alu_control:inst|inst11                            ; out0             ;
; |ALU_TOP|alu_control:inst|inst1                             ; |ALU_TOP|alu_control:inst|inst1                             ; out0             ;
; |ALU_TOP|alu_control:inst|inst19                            ; |ALU_TOP|alu_control:inst|inst19                            ; out0             ;
; |ALU_TOP|alu_control:inst|inst10                            ; |ALU_TOP|alu_control:inst|inst10                            ; out0             ;
; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst5             ; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst5             ; out0             ;
; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst4             ; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst4             ; out0             ;
; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst2             ; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst2             ; out0             ;
; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst8             ; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst8             ; out0             ;
; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst9             ; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst9             ; out0             ;
; |ALU_TOP|alu_control:inst|ADD_EN:inst|inst7                 ; |ALU_TOP|alu_control:inst|ADD_EN:inst|inst7                 ; out0             ;
; |ALU_TOP|alu_control:inst|ADD_EN:inst|inst6                 ; |ALU_TOP|alu_control:inst|ADD_EN:inst|inst6                 ; out0             ;
; |ALU_TOP|alu_control:inst|ADD_EN:inst|inst5                 ; |ALU_TOP|alu_control:inst|ADD_EN:inst|inst5                 ; out0             ;
; |ALU_TOP|alu_control:inst|SWAP_EN:inst2|inst2               ; |ALU_TOP|alu_control:inst|SWAP_EN:inst2|inst2               ; out0             ;
; |ALU_TOP|alu_control:inst|SWAP_EN:inst2|inst1               ; |ALU_TOP|alu_control:inst|SWAP_EN:inst2|inst1               ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|inst                       ; |ALU_TOP|8_B_Ripple_Adder:inst10|inst                       ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst3 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst3 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst5 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst5 ; out0             ;
; |ALU_TOP|Z_LOGIC:inst12|inst10                              ; |ALU_TOP|Z_LOGIC:inst12|inst10                              ; regout           ;
; |ALU_TOP|Z_LOGIC:inst12|inst2                               ; |ALU_TOP|Z_LOGIC:inst12|inst2                               ; out0             ;
; |ALU_TOP|Z_LOGIC:inst12|inst6                               ; |ALU_TOP|Z_LOGIC:inst12|inst6                               ; out0             ;
+-------------------------------------------------------------+-------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                                     ;
+-------------------------------------------------------------+-------------------------------------------------------------+------------------+
; Node Name                                                   ; Output Port Name                                            ; Output Port Type ;
+-------------------------------------------------------------+-------------------------------------------------------------+------------------+
; |ALU_TOP|Z_FLAG                                             ; |ALU_TOP|Z_FLAG                                             ; pin_out          ;
; |ALU_TOP|IR0                                                ; |ALU_TOP|IR0                                                ; out              ;
; |ALU_TOP|IR1                                                ; |ALU_TOP|IR1                                                ; out              ;
; |ALU_TOP|IR2                                                ; |ALU_TOP|IR2                                                ; out              ;
; |ALU_TOP|IR3                                                ; |ALU_TOP|IR3                                                ; out              ;
; |ALU_TOP|IR7                                                ; |ALU_TOP|IR7                                                ; out              ;
; |ALU_TOP|IR8                                                ; |ALU_TOP|IR8                                                ; out              ;
; |ALU_TOP|IR9                                                ; |ALU_TOP|IR9                                                ; out              ;
; |ALU_TOP|IR10                                               ; |ALU_TOP|IR10                                               ; out              ;
; |ALU_TOP|IR11                                               ; |ALU_TOP|IR11                                               ; out              ;
; |ALU_TOP|IR12                                               ; |ALU_TOP|IR12                                               ; out              ;
; |ALU_TOP|IR13                                               ; |ALU_TOP|IR13                                               ; out              ;
; |ALU_TOP|IR14                                               ; |ALU_TOP|IR14                                               ; out              ;
; |ALU_TOP|IR15                                               ; |ALU_TOP|IR15                                               ; out              ;
; |ALU_TOP|R_REG0                                             ; |ALU_TOP|R_REG0                                             ; out              ;
; |ALU_TOP|inst27                                             ; |ALU_TOP|inst27                                             ; out0             ;
; |ALU_TOP|CLRN                                               ; |ALU_TOP|CLRN                                               ; out              ;
; |ALU_TOP|EXECUTE                                            ; |ALU_TOP|EXECUTE                                            ; out              ;
; |ALU_TOP|R_REG1                                             ; |ALU_TOP|R_REG1                                             ; out              ;
; |ALU_TOP|R_REG2                                             ; |ALU_TOP|R_REG2                                             ; out              ;
; |ALU_TOP|R_REG3                                             ; |ALU_TOP|R_REG3                                             ; out              ;
; |ALU_TOP|R_REG4                                             ; |ALU_TOP|R_REG4                                             ; out              ;
; |ALU_TOP|R_REG5                                             ; |ALU_TOP|R_REG5                                             ; out              ;
; |ALU_TOP|R_REG6                                             ; |ALU_TOP|R_REG6                                             ; out              ;
; |ALU_TOP|R_REG7                                             ; |ALU_TOP|R_REG7                                             ; out              ;
; |ALU_TOP|inst9                                              ; |ALU_TOP|inst9                                              ; out0             ;
; |ALU_TOP|CARRY_FLAG                                         ; |ALU_TOP|CARRY_FLAG                                         ; pin_out          ;
; |ALU_TOP|logic_swap:inst8|inst                              ; |ALU_TOP|logic_swap:inst8|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst8|inst8                             ; |ALU_TOP|logic_swap:inst8|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst8|inst9                             ; |ALU_TOP|logic_swap:inst8|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst8|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst7|inst                              ; |ALU_TOP|logic_swap:inst7|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst7|inst8                             ; |ALU_TOP|logic_swap:inst7|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst7|inst9                             ; |ALU_TOP|logic_swap:inst7|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst7|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst6|inst                              ; |ALU_TOP|logic_swap:inst6|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst6|inst8                             ; |ALU_TOP|logic_swap:inst6|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst6|inst9                             ; |ALU_TOP|logic_swap:inst6|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst6|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst5|inst                              ; |ALU_TOP|logic_swap:inst5|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst5|inst8                             ; |ALU_TOP|logic_swap:inst5|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst5|inst9                             ; |ALU_TOP|logic_swap:inst5|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst5|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst4|inst                              ; |ALU_TOP|logic_swap:inst4|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst4|inst8                             ; |ALU_TOP|logic_swap:inst4|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst4|inst9                             ; |ALU_TOP|logic_swap:inst4|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst4|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst3|inst                              ; |ALU_TOP|logic_swap:inst3|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst3|inst8                             ; |ALU_TOP|logic_swap:inst3|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst3|inst9                             ; |ALU_TOP|logic_swap:inst3|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst3|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst2|inst                              ; |ALU_TOP|logic_swap:inst2|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst2|inst8                             ; |ALU_TOP|logic_swap:inst2|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst2|inst9                             ; |ALU_TOP|logic_swap:inst2|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst2|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|logic_swap:inst1|inst                              ; |ALU_TOP|logic_swap:inst1|inst                              ; out0             ;
; |ALU_TOP|logic_swap:inst1|inst8                             ; |ALU_TOP|logic_swap:inst1|inst8                             ; out0             ;
; |ALU_TOP|logic_swap:inst1|inst9                             ; |ALU_TOP|logic_swap:inst1|inst9                             ; out0             ;
; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst8               ; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst8               ; out0             ;
; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst6               ; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst6               ; out0             ;
; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst5               ; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst5               ; out0             ;
; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst7               ; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst7               ; out0             ;
; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst4               ; |ALU_TOP|logic_swap:inst1|4_1_MUX:inst3|inst4               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst11|inst9              ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst11|inst9              ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst10|inst9              ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst10|inst9              ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst9|inst9               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst9|inst9               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst8|inst9               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst8|inst9               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst7|inst9               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst7|inst9               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst6|inst9               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst6|inst9               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst5|inst9               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst5|inst9               ; out0             ;
; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst4|inst9               ; |ALU_TOP|8_2_1_mux:inst11|2_1_mux:inst4|inst9               ; out0             ;
; |ALU_TOP|4_1_MUX:MUX7|inst8                                 ; |ALU_TOP|4_1_MUX:MUX7|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX7|inst6                                 ; |ALU_TOP|4_1_MUX:MUX7|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX7|inst4                                 ; |ALU_TOP|4_1_MUX:MUX7|inst4                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX6|inst8                                 ; |ALU_TOP|4_1_MUX:MUX6|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX6|inst6                                 ; |ALU_TOP|4_1_MUX:MUX6|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX6|inst4                                 ; |ALU_TOP|4_1_MUX:MUX6|inst4                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX5|inst8                                 ; |ALU_TOP|4_1_MUX:MUX5|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX5|inst6                                 ; |ALU_TOP|4_1_MUX:MUX5|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX5|inst4                                 ; |ALU_TOP|4_1_MUX:MUX5|inst4                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX4|inst8                                 ; |ALU_TOP|4_1_MUX:MUX4|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX4|inst6                                 ; |ALU_TOP|4_1_MUX:MUX4|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX4|inst4                                 ; |ALU_TOP|4_1_MUX:MUX4|inst4                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX3|inst8                                 ; |ALU_TOP|4_1_MUX:MUX3|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX3|inst6                                 ; |ALU_TOP|4_1_MUX:MUX3|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX3|inst4                                 ; |ALU_TOP|4_1_MUX:MUX3|inst4                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX2|inst8                                 ; |ALU_TOP|4_1_MUX:MUX2|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX2|inst6                                 ; |ALU_TOP|4_1_MUX:MUX2|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX2|inst4                                 ; |ALU_TOP|4_1_MUX:MUX2|inst4                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX1|inst8                                 ; |ALU_TOP|4_1_MUX:MUX1|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX1|inst6                                 ; |ALU_TOP|4_1_MUX:MUX1|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX1|inst4                                 ; |ALU_TOP|4_1_MUX:MUX1|inst4                                 ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|inst5                           ; |ALU_TOP|CARRY_LOGIC:inst14|inst5                           ; regout           ;
; |ALU_TOP|CARRY_LOGIC:inst14|inst4                           ; |ALU_TOP|CARRY_LOGIC:inst14|inst4                           ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|inst9                           ; |ALU_TOP|CARRY_LOGIC:inst14|inst9                           ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|inst7                           ; |ALU_TOP|CARRY_LOGIC:inst14|inst7                           ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|ext_c:inst3|inst5               ; |ALU_TOP|CARRY_LOGIC:inst14|ext_c:inst3|inst5               ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|4_1_MUX:inst1|inst6             ; |ALU_TOP|CARRY_LOGIC:inst14|4_1_MUX:inst1|inst6             ; out0             ;
; |ALU_TOP|CARRY_LOGIC:inst14|4_1_MUX:inst1|inst5             ; |ALU_TOP|CARRY_LOGIC:inst14|4_1_MUX:inst1|inst5             ; out0             ;
; |ALU_TOP|4_1_MUX:MUX0|inst8                                 ; |ALU_TOP|4_1_MUX:MUX0|inst8                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX0|inst6                                 ; |ALU_TOP|4_1_MUX:MUX0|inst6                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX0|inst5                                 ; |ALU_TOP|4_1_MUX:MUX0|inst5                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX0|inst7                                 ; |ALU_TOP|4_1_MUX:MUX0|inst7                                 ; out0             ;
; |ALU_TOP|4_1_MUX:MUX0|inst4                                 ; |ALU_TOP|4_1_MUX:MUX0|inst4                                 ; out0             ;
; |ALU_TOP|alu_control:inst|inst14                            ; |ALU_TOP|alu_control:inst|inst14                            ; out0             ;
; |ALU_TOP|alu_control:inst|inst16                            ; |ALU_TOP|alu_control:inst|inst16                            ; out0             ;
; |ALU_TOP|alu_control:inst|inst17                            ; |ALU_TOP|alu_control:inst|inst17                            ; out0             ;
; |ALU_TOP|alu_control:inst|inst13                            ; |ALU_TOP|alu_control:inst|inst13                            ; out0             ;
; |ALU_TOP|alu_control:inst|inst6                             ; |ALU_TOP|alu_control:inst|inst6                             ; out0             ;
; |ALU_TOP|alu_control:inst|inst11                            ; |ALU_TOP|alu_control:inst|inst11                            ; out0             ;
; |ALU_TOP|alu_control:inst|inst1                             ; |ALU_TOP|alu_control:inst|inst1                             ; out0             ;
; |ALU_TOP|alu_control:inst|inst19                            ; |ALU_TOP|alu_control:inst|inst19                            ; out0             ;
; |ALU_TOP|alu_control:inst|inst10                            ; |ALU_TOP|alu_control:inst|inst10                            ; out0             ;
; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst5             ; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst5             ; out0             ;
; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst4             ; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst4             ; out0             ;
; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst2             ; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst2             ; out0             ;
; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst8             ; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst8             ; out0             ;
; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst9             ; |ALU_TOP|alu_control:inst|LOGIC_EN:inst12|inst9             ; out0             ;
; |ALU_TOP|alu_control:inst|ADD_EN:inst|inst7                 ; |ALU_TOP|alu_control:inst|ADD_EN:inst|inst7                 ; out0             ;
; |ALU_TOP|alu_control:inst|ADD_EN:inst|inst6                 ; |ALU_TOP|alu_control:inst|ADD_EN:inst|inst6                 ; out0             ;
; |ALU_TOP|alu_control:inst|ADD_EN:inst|inst5                 ; |ALU_TOP|alu_control:inst|ADD_EN:inst|inst5                 ; out0             ;
; |ALU_TOP|alu_control:inst|SWAP_EN:inst2|inst2               ; |ALU_TOP|alu_control:inst|SWAP_EN:inst2|inst2               ; out0             ;
; |ALU_TOP|alu_control:inst|SWAP_EN:inst2|inst1               ; |ALU_TOP|alu_control:inst|SWAP_EN:inst2|inst1               ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|inst                       ; |ALU_TOP|8_B_Ripple_Adder:inst10|inst                       ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst8|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst7|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst6|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst5|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst4|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst3|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst3 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst2|inst3 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst7 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst7 ; out0             ;
; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst5 ; |ALU_TOP|8_B_Ripple_Adder:inst10|Full_Adder_Sub:inst1|inst5 ; out0             ;
; |ALU_TOP|Z_LOGIC:inst12|inst10                              ; |ALU_TOP|Z_LOGIC:inst12|inst10                              ; regout           ;
; |ALU_TOP|Z_LOGIC:inst12|inst2                               ; |ALU_TOP|Z_LOGIC:inst12|inst2                               ; out0             ;
; |ALU_TOP|Z_LOGIC:inst12|inst6                               ; |ALU_TOP|Z_LOGIC:inst12|inst6                               ; out0             ;
+-------------------------------------------------------------+-------------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition
    Info: Processing started: Fri Mar 04 15:50:36 2022
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off WIMPAVR -c WIMPAVR_DEMO
Info: Using vector source file "C:/Users/tyler/WIMPAVR_proj/WIMPAVR Project Demo/ALU_TOP_TEST.vwf"
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is      36.05 %
Info: Number of transitions in simulation is 5593
Info: Quartus II Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 145 megabytes
    Info: Processing ended: Fri Mar 04 15:50:36 2022
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


